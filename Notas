https://github.com/gseguierjc/simetrik-demo


aws eks update-kubeconfig --name demo-eks --region us-east-1
kubectl config current-context   # Debe mostrar algo como arn:aws:eks:us-east-1:â€¦/cluster/demo-eks


aws codebuild start-build --project-name demo-grpc-build

kubectl -n grpc-demo-server get pods -o wide
kubectl -n grpc-demo-client get pods -o wide
 kubectl -n grpc-demo-server describe pod service-server-775d56f5fb-vmdtj
 kubectl -n grpc-demo-server logs service-client-5d976d786f-4966h 
 kubectl -n grpc-demo-server delete pod service-server-775d56f5fb-vmdtj

 $ kubectl rollout restart deployment service-server -n grpc-demo-server
kubectl rollout restart deployment service-client -n grpc-demo-client


kubectl -n grpc-demo-client rollout restart deployment service-client
kubectl -n grpc-demo-server rollout restart deployment service-server




# probar localmente 

aws ecr get-login-password --region us-east-1\
  | docker login --username AWS --password-stdin 647187952873.dkr.ecr.us-east-1.amazonaws.com

# etiqueta:server es el tag que usaste en tu buildspec
docker pull 647187952873.dkr.ecr.us-east-1.amazonaws.com/demo-app:server


docker run -d \
  -p 50051:50051 \
  -v $(pwd)/server.crt:/app/server.crt \
  -v $(pwd)/server.key:/app/server.key \
647187952873.dkr.ecr.us-east-1.amazonaws.com/demo-app:server


kubectl -n grpc-demo-server port-forward pod/<pod-name> 50051:443



curl -v --http2 -k -H "Host: grpc.local" \
  https://k8s-grpcdemo-grpcingr-eda0cfc6de-42444441.us-east-1.elb.amazonaws.com/grpc.health.v1.Health/Check






CLUSTER_NAME=demo-eks
HOST=$(echo grpc.local)
aws elbv2 describe-load-balancers \
  --names demo-eks-grpc-demo-app \
  --query "LoadBalancers[0].LoadBalancerArn" --output text




